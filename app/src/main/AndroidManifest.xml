<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.ray.project">

    <!-- 网络权限 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!-- 操作外部存储设备 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!-- 读取外部存储设备 -->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!--摄像头相关权限-->
    <uses-permission android:name="android.permission.FLASHLIGHT"/>
    <uses-feature android:name="android.hardware.camera"/>
    <uses-feature android:name="android.hardware.camera.autofocus"/>
    <uses-permission android:name="android.permission.CAMERA"/>
    <!--定位相关权限-->
    <!-- 通过WiFi或移动基站的方式获取用户错略的经纬度信息，定位精度大概误差在30~1500米 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <!-- 通过GPS芯片接收卫星的定位信息，定位精度达10米以内 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- 允许程序访问额外的定位提供者指令 -->
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"/>
    <!--后台位置信息 Android 10 (API level 29) 或更高版本 -->
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />

<!--    <uses-feature android:name="android.hardware.telephony" android:required="false" />-->
<!--    <uses-permission android:name="android.com.baidu.lbsapipermission.REQUEST_INSTALL_PACKAGES"/>-->
<!--    <uses-permission android:name="android.permission.GET_ACCOUNTS"/>-->
<!--    <uses-permission android:name="android.permission.READ_PROFILE"/>-->
<!--    <uses-permission android:name="android.permission.READ_CONTACTS"/>-->

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        android:usesCleartextTraffic="true"
        android:name="com.ray.project.config.ProjectApplication">

        <!-- 多渠道打包 -->
        <meta-data
            android:name="BAIDU_CHANNEL_VALUE"
            android:value="${RAY_CHANNEL_VALUE}" />

        <!-- 配置bugly -->
        <meta-data
            android:name="BUGLY_APPID"
            android:value="${BUGLY_APPID}" />
        <!-- 配置APP版本号 -->
        <meta-data
            android:name="BUGLY_APP_VERSION"
            android:value="${VERSION_CODE}" />
        <!-- 配置APP渠道号 -->
        <meta-data
            android:name="BUGLY_APP_CHANNEL"
            android:value="${RAY_CHANNEL_VALUE}" />
        <!-- 配置Bugly调试模式（true或者false）-->
        <meta-data
            android:name="BUGLY_ENABLE_DEBUG"
            android:value="${RELEASE_PACKAGE}" />

        <activity
            android:name="com.ray.project.ui.AppStart"
            android:exported="true"
            android:theme="@style/AppTheme"
            android:launchMode="singleTask">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.ray.project.ui.MainActivity"
            android:theme="@style/AppTheme"
            android:launchMode="singleTask">
        </activity>

        <!--
            总结：
            1、不设置Activity的android:configChanges时，切屏会重新调用各个生命周期，切横屏时会执行一次，切竖屏时会执行两次
            2、设置Activity的android:configChanges="orientation"时，切屏还是会重新调用各个生命周期，切横、竖屏时只会执行一次
            3、设置Activity的android:configChanges="orientation|keyboardHidden"时，切屏不会重新调用各个生命周期，只会执行onConfigurationChanged方法
            (一次生命周期)如切换成横屏: onSaveInstanceState->onPause->onStop->onDestroy->onCreate->onStart->onRestoreInstanceState->onResume->
        -->
        <activity
            android:name="com.ray.project.ui.WebViewActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenSize|navigation|fontScale|uiMode|screenLayout"
            android:hardwareAccelerated="true"
            android:theme="@style/AppTheme">
        </activity>

        <activity
            android:name="com.ray.project.ui.FragmentContainerActivity"
            android:theme="@style/AppTheme">
        </activity>

        <activity
            android:name="com.ray.project.ui.login.LoginActivity"
            android:theme="@style/AppTheme"
            android:launchMode="singleInstance">
        </activity>

        <activity
            android:name="com.ray.project.ui.register.RegisterActivity"
            android:theme="@style/AppTheme"
            android:launchMode="singleInstance">
        </activity>

        <!--authorities：app的包名.fileProvider （fileProvider可以随便写）,上面采用的是gradle的替换直接写成包名也可以，但是推荐这种方式，多渠道分包的时候不用关心了-->
        <!--grantUriPermissions：必须是true，表示授予 URI 临时访问权限-->
        <!--exported：必须是false-->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths"/>
        </provider>

        <!-- 照片选取 -->
        <activity
            android:name="com.photo.select.ImageSelectorActivity"
            android:configChanges="orientation|screenSize"
            android:theme="@style/ImageSelectorTheme"/>
        <activity
            android:name="com.photo.select.preview.MultiImgShowActivity"
            android:configChanges="orientation|screenSize"
            android:theme="@style/ImageShowTheme">
        </activity>
        <!-- 图片预览 -->
        <activity
            android:name="com.ray.project.ui.basis.image.ImageViewActivity"
            android:theme="@style/Theme.AppCompat.Light.NoActionBar"
            android:launchMode="singleTask"
            android:windowSoftInputMode="adjustPan">
        </activity>

        <service
            android:name="com.ray.project.services.InstallerHelperService"
            android:enabled="true"
            android:exported="true"
            android:label="@string/service_label"
            android:permission="android.permission.BIND_ACCESSIBILITY_SERVICE"
            android:process=":BackgroundService">
            <intent-filter>
                <action android:name="android.accessibilityservice.AccessibilityService" />
            </intent-filter>
            <meta-data
                android:name="android.accessibility service"
                android:resource="@xml/accessibility_config" />
        </service>

        <!-- 样例界面 -->
        <activity
            android:name="com.ray.project.ui.sample.RFixDevActivity"
            android:theme="@style/AppTheme"
            android:launchMode="singleInstance">
        </activity>
    </application>
</manifest>
